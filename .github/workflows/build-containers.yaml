name: Build Containers

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'renovate.json'
      - '.gitignore'
      - '.git/**'
      - '.github/**'

jobs:
  detect-changes:
    runs-on: self-hosted
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Get changed directories
        id: set-matrix
        run: |
          # Get all directories with changes compared to previous commit
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -v "^\.github/" | cut -d/ -f1 | sort -u)
          echo "Changed top-level directories: $CHANGED_DIRS"
          
          # Check which directories have Containerfiles
          CONTAINER_DIRS=()
          for dir in $CHANGED_DIRS; do
            if [ -f "$dir/Containerfile" ]; then
              CONTAINER_DIRS+=("$dir")
            fi
          done
          
          # Convert to proper JSON format for GitHub Actions
          MATRIX_JSON=$(echo '{"folder":'$(printf '%s\n' "${CONTAINER_DIRS[@]}" | jq -R . | jq -s .)'}'| tr -d '\n')
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "Directories with Containerfiles: $MATRIX_JSON"

  build:
    needs: detect-changes
    runs-on: self-hosted
    if: ${{ needs.detect-changes.outputs.matrix != '{"folder":[]}' && needs.detect-changes.outputs.matrix != '' }}
    strategy:
      matrix: ${{ fromJSON(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Build container
        working-directory: ${{ matrix.folder }}
        run: |
          echo "Building container for ${{ matrix.folder }} using make"
          make container
      
      - name: Build disk images
        working-directory: ${{ matrix.folder }}
        run: |
          if [ -d /shared/artifacts ]; then
            echo "Building images"
            make boot
            
            for i in raw anaconda-iso qcow2; do
                mkdir -p /shared/artifacts/data/bootc/${{ matrix.folder }}
                if [ -d output/$i ]; then
                    rsync -avh --remove-source-files --progress output/$i/ /shared/artifacts/data/bootc/${{ matrix.folder }}/
                fi
            done
          fi
